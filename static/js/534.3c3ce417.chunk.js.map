{"version":3,"file":"static/js/534.3c3ce417.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/contactSelectors.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContactListText = styled.p`\nfont-weight: 600;\nmargin-top: 15px;\n`;\n\nexport const StyledDeleteButton = styled.button`\ncursor: pointer;\nbackground: transparent;\nborder: none;\nfont-size: 20px;\ncolor: red;\n`;","import {\n  StyledContactListText,\n  StyledDeleteButton,\n} from './ContactListItem.styled';\nimport { MdOutlineDeleteForever } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { DeleteContacts } from '../../redux/contactsOperations';\n\nexport const ContactListItem = ({ id, contact: { name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <StyledContactListText>Name: {name}</StyledContactListText>\n      <StyledContactListText>Number: {number}</StyledContactListText>\n      <StyledDeleteButton\n        type=\"button\"\n        onClick={() => {\n          dispatch(DeleteContacts(id));\n        }}\n      >\n        <MdOutlineDeleteForever />\n      </StyledDeleteButton>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\n// import { selectAllContacts } from '../../redux/contactSelectors';\nimport { selectContacts, selectFilter } from '../../redux/auth/selectors';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const getFiltered = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  const filteredContacts = getFiltered();\n  return (\n    <ul>\n      {filteredContacts.map(({ id, ...contact }) => (\n        <li key={id}>\n          <ContactListItem id={id} contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\nbackground-color: tomato; \ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nmargin: 20px auto;\nwidth: 300px;\nheight: 120px;\npadding: 60px;\nborder-radius: 10px;\n`;\n\nexport const StyledFild = styled(Field)`\npadding: 4px;\nborder-radius: 4px; \ntext-align: center;\n`;\n\nexport const AddButton = styled.button`\nborder-radius: 4px;\nwidth: 100px;\npadding: 6px;\ncursor: pointer;\ncolor: grey;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { StyledForm, StyledFild, AddButton } from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AddContacts } from '../../redux/contactsOperations';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[A-Za-zА-Яа-яЁё\\s]+$/, 'Invalid name')\n    .required('This is required!')\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!'),\n  number: Yup.string()\n    .matches(/^\\+?[0-9]{1,3}-?[0-9]/, 'Invalid number')\n    .required('This is required!')\n    .min(6, 'Too Short!')\n    .max(20, 'Too Long!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        const checkName = values.name;\n\n        if (\n          contacts.some(\n            contact => contact.name.toLowerCase() === checkName.toLowerCase()\n          )\n        ) {\n          alert(`${checkName} already recorded in the directory`);\n          return;\n        }\n        dispatch(AddContacts({ ...values }));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm >\n        <label>\n          <StyledFild name=\"name\" placeholder=\"entert name here\" />\n          <ErrorMessage name=\"name\" />\n        </label>\n        <label>\n          <StyledFild name=\"number\" placeholder=\"entert number here\" />\n          <ErrorMessage name=\"number\" />\n        </label>\n        <AddButton type=\"submit\">add contact</AddButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.input`\ndisplay: block;\nmargin: 0 auto;\nwidth: 250px;\ntext-align: center;\nborder-radius: 4px;\npadding: 4px;\n`;","import { StyledFilter } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { selectFilter } from '../../redux/auth/selectors'\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <StyledFilter\n      placeholder=\"filter here\"\n      type=\"text\"\n      value={filter}\n      onChange={event => dispatch(changeFilter(event.target.value))}\n    />\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsList } from 'components/ContactsList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contactsOperations';\nimport { selectLoading } from '../redux/contactSelectors';\n\nexport default function Contacts () {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["StyledContactListText","styled","_templateObject","_taggedTemplateLiteral","StyledDeleteButton","_templateObject2","ContactListItem","_ref","id","_ref$contact","contact","name","number","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","type","onClick","DeleteContacts","MdOutlineDeleteForever","ContactsList","contacts","useSelector","selectContacts","filter","selectFilter","filteredContacts","toLowerCase","includes","map","_objectWithoutProperties","_excluded","StyledForm","Form","StyledFild","Field","AddButton","_templateObject3","schema","Yup","shape","matches","required","min","max","ContactForm","state","items","Formik","initialValues","validationSchema","onSubmit","values","actions","checkName","some","alert","concat","AddContacts","_objectSpread","resetForm","placeholder","ErrorMessage","StyledFilter","Filter","value","onChange","event","changeFilter","target","selectLoading","loading","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}